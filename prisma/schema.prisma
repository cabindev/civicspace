generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  firstName           String
  lastName            String
  email               String    @unique
  password            String
  image               String?
  role                Role      @default(MEMBER)
  emailVerified       DateTime?
  resetToken          String?   @unique
  resetTokenCreatedAt DateTime?
  resetTokenExpiresAt DateTime?
  lastPasswordReset   DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  publicPolicies PublicPolicy[]
  ethnicGroups   EthnicGroup[]
  traditions         Tradition[]
  creativeActivities CreativeActivity[]
  notifications Notification[]
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MEMBER
}

model Notification {
  id          String    @id @default(cuid())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  activityId  String
  activityType String   // 'tradition' | 'publicPolicy' | 'ethnicGroup' | 'creativeActivity'
  isRead      Boolean   @default(false)
  createdAt   DateTime  @default(now())
}
model TraditionCategory {
  id         String      @id @default(cuid())
  name       String      @unique
  traditions Tradition[]
}

model Tradition {
  id                  String            @id @default(cuid())
  categoryId          String
  category            TraditionCategory @relation(fields: [categoryId], references: [id])
  userId             Int
  user               User                @relation(fields: [userId], references: [id])
  name                String
  district            String
  amphoe              String
  province            String
  zipcode             Int?
  district_code       Int?
  amphoe_code         Int?
  province_code       Int?
  type                String
  village             String?
  coordinatorName     String?
  phone               String?
  history             String?            @db.Text
  alcoholFreeApproach String?            @db.Text
  results             String?           @db.Text
  startYear           Int?
  images              Image[]
  videoLink           String?
  policyFileUrl       String?
  viewCount           Int               @default(0)
  hasPolicy           Boolean
  hasAnnouncement     Boolean
  hasInspector        Boolean
  hasMonitoring       Boolean
  hasCampaign         Boolean
  hasAlcoholPromote   Boolean
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model PublicPolicy {
  id              String      @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  name            String
  signingDate     DateTime
  level           PolicyLevel
  healthRegion      String?
  district        String
  amphoe          String
  province        String
  type            String
  village         String?
  content         Json        // Store as JSON
  summary         String      @db.Text
  results         String?     @db.Text
  images          Image[]
  videoLink       String?
  policyFileUrl   String?
  viewCount       Int         @default(0)
  zipcode         Int?
  district_code   Int?
  amphoe_code     Int?
  province_code   Int?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

enum PolicyLevel {
  NATIONAL
  HEALTH_REGION
  PROVINCIAL
  DISTRICT
  SUB_DISTRICT
  VILLAGE
}

enum PolicyContent {
  LAW_ENFORCEMENT
  ALCOHOL_FREE_TRADITION
  ALCOHOL_FREE_MERIT
  CHILD_YOUTH_PROTECTION
  CREATIVE_SPACE
}

model EthnicGroup {
  id                  String    @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  categoryId          String
  category            EthnicCategory @relation(fields: [categoryId], references: [id])
  name                String
  history             String    @db.Text
  activityName        String
  activityOrigin      String    @db.Text
  province            String
  amphoe              String
  district            String
  village             String?
  zipcode             Int?
  district_code       Int?
  amphoe_code         Int?
  province_code       Int?
  type                String    // เพิ่มฟิลด์ type
  activityDetails     String    @db.Text
  alcoholFreeApproach String    @db.Text
  startYear           Int
  results             String?   @db.Text
  images              Image[]
  videoLink           String?
  fileUrl             String?
  viewCount           Int       @default(0)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model EthnicCategory {
  id           String        @id @default(cuid())
  name         String        @unique
  ethnicGroups EthnicGroup[]
}

model CreativeActivity {
  id                 String               @id @default(cuid())
  categoryId         String
  category           CreativeCategory     @relation(fields: [categoryId], references: [id])
  subCategoryId      String
  subCategory        CreativeSubCategory  @relation(fields: [subCategoryId], references: [id])
  userId             Int
  user               User                @relation(fields: [userId], references: [id])
  name               String
  district           String
  amphoe             String
  province           String
  zipcode            Int?
  district_code      Int?
  amphoe_code        Int?
  province_code      Int?
  type               String
  village            String?
  coordinatorName    String?
  phone              String?
  description        String               @db.Text
  summary            String               @db.Text
  results            String?              @db.Text
  startYear          Int
  images             Image[]
  videoLink          String?
  reportFileUrl      String?
  viewCount          Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  
}

model CreativeCategory {
  id           String               @id @default(cuid())
  name         String               @unique
  activities   CreativeActivity[]
  subCategories CreativeSubCategory[]
}

model CreativeSubCategory {
  id           String             @id @default(cuid())
  name         String
  categoryId   String
  category     CreativeCategory   @relation(fields: [categoryId], references: [id])
  activities   CreativeActivity[]
}

// อัปเดตโมเดล Image เพื่อรองรับ CreativeActivity
model Image {
  id                 String            @id @default(cuid())
  url                String
  traditionId        String?
  tradition          Tradition?        @relation(fields: [traditionId], references: [id], onDelete: Cascade)
  publicPolicyId     String?
  publicPolicy       PublicPolicy?     @relation(fields: [publicPolicyId], references: [id], onDelete: Cascade)
  ethnicGroupId      String?
  ethnicGroup        EthnicGroup?      @relation(fields: [ethnicGroupId], references: [id], onDelete: Cascade)
  creativeActivityId String?
  creativeActivity   CreativeActivity? @relation(fields: [creativeActivityId], references: [id], onDelete: Cascade)
}


